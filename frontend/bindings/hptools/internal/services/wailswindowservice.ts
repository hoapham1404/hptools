// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

/**
 * WailsWindowService is the concrete implementation for Wails
 * @module
 */

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Call as $Call, CancellablePromise as $CancellablePromise, Create as $Create } from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as models$0 from "../models/models.js";

/**
 * GetAllProcessesWithWindows returns all processes that have visible windows (for debugging)
 */
export function GetAllProcessesWithWindows(): $CancellablePromise<models$0.ProcessInfo[]> {
    return $Call.ByID(2996448723).then(($result: any) => {
        return $$createType1($result);
    });
}

/**
 * GetApplicationProcesses returns only processes that have visible windows
 */
export function GetApplicationProcesses(): $CancellablePromise<models$0.ProcessInfo[]> {
    return $Call.ByID(300866837).then(($result: any) => {
        return $$createType1($result);
    });
}

/**
 * GetWindowInfo gets the current size and position of a window
 */
export function GetWindowInfo(pid: number): $CancellablePromise<models$0.WindowInfo | null> {
    return $Call.ByID(1957271386, pid).then(($result: any) => {
        return $$createType3($result);
    });
}

/**
 * SetWindowPosition sets both position and size of a window
 */
export function SetWindowPosition(pid: number, x: number, y: number, width: number, height: number): $CancellablePromise<void> {
    return $Call.ByID(2290525609, pid, x, y, width, height);
}

/**
 * SetWindowSize sets the size of a window by process PID, keeping current position
 */
export function SetWindowSize(pid: number, width: number, height: number): $CancellablePromise<void> {
    return $Call.ByID(1467875311, pid, width, height);
}

// Private type creation functions
const $$createType0 = models$0.ProcessInfo.createFrom;
const $$createType1 = $Create.Array($$createType0);
const $$createType2 = models$0.WindowInfo.createFrom;
const $$createType3 = $Create.Nullable($$createType2);
